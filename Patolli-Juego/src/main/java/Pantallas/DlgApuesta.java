/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Pantallas;

<<<<<<< refs/remotes/origin/melle
=======
import Cliente.Cliente;

import Servidor.ControladorDeJuego;
import entidades.Codigo;
import entidades.EstadoDelJuego;
import entidades.Jugador;
import java.awt.Color;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import tablero.Tablero;


>>>>>>> local
/**
 *
 * @author Enrique Rodriguez
 */
public class DlgApuesta extends javax.swing.JDialog {

    private EstadoDelJuego estadoDelJuego;
    

    /**
     * Creates new form DlgApuesta
     */
    public DlgApuesta(java.awt.Frame parent, boolean modal) {
<<<<<<< refs/remotes/origin/melle
        super(parent, modal);
=======
         super(parent, modal);
>>>>>>> local
        initComponents();
        estadoDelJuego = new EstadoDelJuego();  // Asegúrate de que el estado del juego se inicialice

        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

<<<<<<< refs/remotes/origin/melle
=======
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
    estadoDelJuego = ControladorDeJuego.getEstadoDelJuego();
    
    try {
        // Verificar que el monto de la apuesta sea un número válido
        String montoStr = txtApuesta.getText();  // Suponiendo que tienes un campo txtMontoApuesta para ingresar el monto
        if (montoStr.isEmpty() || !montoStr.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Por favor, ingresa un monto válido para la apuesta.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Registrar la apuesta en el estado del juego
        int montoApuesta = Integer.parseInt(montoStr);
        estadoDelJuego.setApuesta(montoApuesta);

        // Configurar el tablero con las opciones elegidas previamente en el FrmConfigurarPartida
        if (estadoDelJuego.getCantidadCasillas() == 0) {
            JOptionPane.showMessageDialog(this, "Por favor, configura el tamaño del tablero antes de crear la partida.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear la partida
        System.out.println("La partida ha sido creada con éxito con el monto de apuesta: " + montoApuesta);
       
        // Abrir el tablero
        EstadoDelJuego estadoDelJuego = new EstadoDelJuego();
        estadoDelJuego.iniciarPartida();
        
        FrmTablero.getInstance().inicializar();  // Este método inicializa el tablero con la configuración que ya está en estadoDelJuego
        FrmTablero.getInstance().setVisible(true);

        // Cerrar la ventana de apuesta
        dispose();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al crear la partida: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    }//GEN-LAST:event_btnCrearActionPerformed

>>>>>>> local
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgApuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgApuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgApuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgApuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgApuesta dialog = new DlgApuesta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
